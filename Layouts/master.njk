<!DOCTYPE html>
<html lang="en" class="scroll-smooth">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />

    {% render_snippet "meta-tags.njk" %}
    
    <link href="{{ 'built.css' | assetUrl }}" rel="stylesheet"/>
    <link href="{{ 'custom.css' | assetUrl }}" rel="stylesheet"/>

    <style id="theme-styles">
      :root {
        --cl-accent: {{ global.properties.accent_color | hex_to_rgb }};
        --cl-background: {{ global.properties.background_color | hex_to_rgb }};
        --cl-card: {{ global.properties.card_color | hex_to_rgb }};
        --cl-t-primary: {{ (global.properties.text_primary_color if global.properties.text_primary_color else '#ffffff') | hex_to_rgb }};
        --cl-t-accent: {{ (global.properties.text_accent_color if global.properties.text_accent_color else '#ffffff') | hex_to_rgb }};
      }

      body {
        font-family: '{{ (global.properties.font if global.properties.font else 'Inter') }}', sans-serif;
      }
    </style>

    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family={{ (global.properties.font if global.properties.font else 'Inter') | replace(" ", "+") }}:wght@300;400;500;600;700&display=swap" rel="stylesheet" id="theme-font">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.2/css/all.min.css" rel="stylesheet" />
    <link href="https://cdn.jsdelivr.net/npm/@splidejs/splide@4.1.4/dist/css/splide.min.css" rel="stylesheet" integrity="sha256-5uKiXEwbaQh9cgd2/5Vp6WmMnsUr3VZZw0a8rKnOKNU=" crossorigin="anonymous" />
    <link href="https://cdn.jsdelivr.net/npm/choices.js@10.2.0/public/assets/styles/choices.min.css" rel="stylesheet" integrity="sha256-gS3HxgWFFFqEo0wQoALebu5XlWdYr3gqd4/Tk5wt8Ig=" crossorigin="anonymous" />
    <link href="https://cdn.jsdelivr.net/npm/lite-youtube-embed@0.3.3/src/lite-yt-embed.css" rel="stylesheet" integrity="sha256-qwd4FE0YEnXtN1D9SlLRzgZ35aJTclA5jg1poUQA3dE=" crossorigin="anonymous" />
  </head>
  <body style="background-color: rgb({{ global.properties.background_color | hex_to_rgb }});">
    {% if shop.background_image_url %}
      <div class="fixed inset-0 z-[-1] bg-center bg-cover pointer-events-none" style="background-image: url({{ shop.background_image_url }});"></div>
    {% endif %}
    
    <div class="flex flex-col justify-between max-w-7xl min-h-screen mx-auto p-4 relative md:p-6 lg:p-8" id="app" x-data="app">
      <div>
        <div>
          {% render_component "announcement" %}
          {% render_component "header" %}
        </div>
        {{ templateContent | safe }}
      </div>
      {% render_component "footer" %}
    </div>

    <script>
      document.addEventListener('alpine:init', () => {
        Alpine.data('app', () => ({
          appCart: {
            items: [],
            updateLocalStorage: function () {
              localStorage.setItem('cart', JSON.stringify(this.items));
            },
            set: function (items) {
              this.items = items;

              this.updateLocalStorage();
            },
            add: function (productId, variantId, quantity) {
              const item = this.items.find((item) => item.variantId === variantId);

              if (item) {
                item.quantity += quantity;
              } else {
                this.items.push({ productId, variantId, quantity });
              }

              this.updateLocalStorage();
            },
            remove: function (variantId) {
              this.items = this.items.filter((item) => item.variantId !== variantId);

              this.updateLocalStorage();
            },
            editQuantity: function (variantId, quantity) {
              const item = this.items.find((item) => item.variantId === variantId);
              item.quantity = quantity;

              this.updateLocalStorage();
            },
            get countWithQuantities() {
              return this.items.reduce((acc, item) => acc + item.quantity, 0);
            },
            init: function () {
              if (localStorage.getItem('cart')) {
                try {
                  this.items = JSON.parse(localStorage.getItem('cart'));
                  if (!Array.isArray(this.items)) {
                    this.items = [];
                  }
                } catch (error) {
                  console.error('Error parsing cart from local storage', error);
                  this.items = [];
                }
              }
            }
          },

          init: function () {
            this.appCart.init();
          }
        }));
      });
    </script>

    {% if isBuilder %}
      {% render_snippet "script-builder.njk" %}
    {% endif %}

    <script
      src="https://cdn.jsdelivr.net/npm/alpinejs@3.14.3/dist/cdn.min.js"
      integrity="sha256-aJ9ROXjRHWn00zeU9ylsmlhqLlXeebtEfN28P0dPnwc="
      crossorigin="anonymous"
    ></script>
    <script
      src="https://cdn.jsdelivr.net/npm/@splidejs/splide@4.1.4/dist/js/splide.min.js"
      integrity="sha256-FZsW7H2V5X9TGinSjjwYJ419Xka27I8XPDmWryGlWtw="
      crossorigin="anonymous"
    ></script>
    <script
      src="https://cdn.jsdelivr.net/npm/choices.js@10.2.0/public/assets/scripts/choices.min.js"
      integrity="sha256-P+JgcxEeZtxwYS1+TAAuusKFM646SB8Oodk0TYu9zuo="
      crossorigin="anonymous"
    ></script>
    <script
      src="https://cdn.jsdelivr.net/npm/lite-youtube-embed@0.3.3/src/lite-yt-embed.js"
      integrity="sha256-t8Thbv2D6x0AC5rMk+Ydz589Zq4lp8ZC4iVfNNdxs5U="
      crossorigin="anonymous"
    ></script>
    <script
      src="{{ 'script.js' | assetUrl }}"
      crossorigin="anonymous"
    ></script>

    {% if global.properties.snow %}
      <script src="/assets/js/snow.js"></script>
    {% endif %}

    {% render_snippet "script-integrations.njk" %}
  </body>
</html>